<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>jakartaee9-starter-boilerplate</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>jakartaee9-starter-boilerplate</name>
    <description>A Jakarta EE starter project boilerplate for Jakarta EE 9</description>

    <properties>
        <!-- Global Maven settings -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
        <!-- Set java compiler version to 11 -->
        <!-- <maven.compiler.release>11</maven.compiler.release>-->
        <!-- The default value changed to `false` since maven-war-plugin 3.0.0 -->
        <failOnMissingWebXml>false</failOnMissingWebXml>

        <!-- Official Maven Plugins -->
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-war-plugin.version>3.3.1</maven-war-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
        <maven-surefire-report-plugin.version>3.0.0-M5</maven-surefire-report-plugin.version>

        <!-- Cargo maven plugin -->
        <cargo-maven2-plugin.version>1.8.2</cargo-maven2-plugin.version>

        <!-- Jakarta EE API -->
        <jakartaee-api.version>9.0.0-RC3</jakartaee-api.version>

        <!-- TODO: update Arquillian BOM -->
        <arquillian-bom.version>1.6.0.Final</arquillian-bom.version>

        <!-- Test Utilities -->
        <junit.version>4.13</junit.version>
        <mockito.version>3.5.13</mockito.version>
        <json-path.version>2.4.0</json-path.version>
        <awaitility.version>4.0.3</awaitility.version>
        <hamcrest.version>2.2</hamcrest.version>
        <jsonassert.version>1.5.0</jsonassert.version>
        <assertj.version>3.17.2</assertj.version>

        <!-- Glassfish server -->
        <glassfish.version>6.0.0-M1</glassfish.version>
        <arquillian-glassfish.version>1.0.2</arquillian-glassfish.version>
        <jersey.version>3.0.0-M6</jersey.version>

        <!-- TODO: upgrade Payara server -->
        <payara.version>5.194</payara.version>
        <arquillian-payara.version>2.2</arquillian-payara.version>

        <!-- TODO: upgrade Wildfly server -->
        <wildfly.version>19.0.0.Beta2</wildfly.version>
        <wildfly-maven-plugin.version>2.1.0.Beta1</wildfly-maven-plugin.version>
        <wildfly-arquillian.version>2.2.0.Final</wildfly-arquillian.version>
        <!-- websockets-jsr and resteasy for client, aligned with Wildfly version. -->
        <undertow-websockets-jsr.version>2.0.26.Final</undertow-websockets-jsr.version>
        <resteasy.version>3.9.0.Final</resteasy.version>

        <!-- TODO: OpenLiberty server -->
        <liberty.runtime.version>20.0.0.1</liberty.runtime.version>
        <!-- WARNING: 10.15.x.x does not work with openliberty 20.0.0.1 -->
        <derby.version>10.14.2.0</derby.version>
        <liberty-maven-plugin.version>3.2.3</liberty-maven-plugin.version>
        <arquillian-liberty.version>1.0.6</arquillian-liberty.version>
        <cxf.version>3.3.5</cxf.version>

        <!-- By default, skip tests -->
        <skipTests>true</skipTests>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-api</artifactId>
                <version>${jakartaee-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian-bom.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${jsonassert.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.awaitility/awaitility -->
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- JSON path -->
            <!-- https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path -->
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path-assert -->
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path-assert</artifactId>
                <version>${json-path.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Mockito -->
            <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
        </dependency>
        <!--<dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
        </dependency>-->
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <id>default-test</id>
                        <configuration>
                            <excludes>
                                <exclude>**/it/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <configuration>
                    <skipITs>${skipTests}</skipITs>
                </configuration>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <trimStackTrace>false</trimStackTrace>
                            <includes>
                                <include>**/it/**</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>glassfish-local</id>
            <properties>
                <glassfish.home>${project.build.directory}/glassfish6</glassfish.home>
                <glassfish.domainDir>${glassfish.home}/glassfish/domains</glassfish.domainDir>
                <glassfish.domainName>domain1</glassfish.domainName>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven-dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <!-- <groupId>fish.payara.distributions</groupId> <artifactId>payara</artifactId>
                                            <version>${payara.version}</version> <type>zip</type> -->
                                            <groupId>org.glassfish.main.distributions</groupId>
                                            <artifactId>glassfish</artifactId>
                                            <version>${glassfish.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>${cargo-maven2-plugin.version}</version>
                        <configuration>
                            <container>
                                <containerId>glassfish5x</containerId>
                                <type>installed</type>
                                <home>${glassfish.home}</home>
                            </container>
                            <configuration>
                                <type>existing</type>
                                <home>${glassfish.domainDir}</home>
                                <properties>
                                    <cargo.glassfish.domain.name>${glassfish.domainName}</cargo.glassfish.domain.name>
                                    <cargo.remote.timeout>600000</cargo.remote.timeout>
                                    <cargo.remote.password></cargo.remote.password>
                                </properties>
                            </configuration>
                        </configuration>
                        <!-- provides JSR88 client API to deploy on Glassfish/Payara Server -->
                        <dependencies>
                            <dependency>
                                <groupId>org.glassfish.main.deployment</groupId>
                                <artifactId>deployment-client</artifactId>
                                <version>5.1.0</version>
                                <!--<version>${glassfish.version}</version>-->
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>

            </build>
        </profile>
        <profile>
            <id>glassfish-remote</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <configuration>
                            <container>
                                <containerId>glassfish5x</containerId>
                                <type>remote</type>
                            </container>
                            <configuration>
                                <type>runtime</type>
                                <properties>
                                    <cargo.remote.username>admin</cargo.remote.username>
                                    <cargo.remote.password></cargo.remote.password>
                                    <cargo.glassfish.admin.port>4848</cargo.glassfish.admin.port>
                                    <cargo.hostname>localhost</cargo.hostname>
                                </properties>
                            </configuration>
                        </configuration>
                        <!-- provides JSR88 client API to deploy on Glassfish/Payara Server -->
                        <dependencies>
                            <dependency>
                                <groupId>org.glassfish.main.deployment</groupId>
                                <artifactId>deployment-client</artifactId>
                                <version>5.1.0</version>
                                <!--<version>${glassfish.version}</version>-->
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>wildfly</id>
            <build>
                <plugins>
                    <!-- The WildFly plugin deploys your war to a local WildFly container -->
                    <!-- To use, run: mvn package wildfly:deploy -->
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${wildfly-maven-plugin.version}</version>
                        <configuration>
                            <!-- if a wildfly.home property is not present, firstly it will download
                            a copy of wildfly distribution automatically -->
                            <!-- also fetch from jbossHome -->
                            <!-- <jossHome>${env.WILDFLY_HOME}</jbossHome>-->

                            <!-- control remote wildfly server -->
                            <!-- <hostname></hostname>
                            <port></port>
                            <username></username>
                            <password></password> -->

                            <!-- or set a wildfly.id property to add a server in settings.xml -->
                            <!--<id>wildfly-svr</id> -->

                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>openliberty</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven-dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>copy</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derby</artifactId>
                                    <version>${derby.version}</version>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/liberty/wlp/usr/shared/resources
                            </outputDirectory>
                        </configuration>
                    </plugin>
                    <!-- Enable liberty-maven-plugin -->
                    <plugin>
                        <groupId>io.openliberty.tools</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <version>${liberty-maven-plugin.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
            </plugin>
        </plugins>
    </reporting>
    <issueManagement>
        <system>Github Issues</system>
        <url>https://github.com/hantsy/jakartaee8-starter/issues</url>
    </issueManagement>
    <ciManagement>
        <system>Github Actions</system>
        <url>https://github.com/hantsy/jakartaee8-starter/actions</url>
    </ciManagement>
    <scm>
        <url>https://github.com/hantsy/jakartaee8-starter</url>
        <connection>scm:git:https://github.com/hantsy/jakartaee8-starter</connection>
        <developerConnection>scm:git:https://github.com/hantsy/jakartaee8-starter</developerConnection>
    </scm>
</project>